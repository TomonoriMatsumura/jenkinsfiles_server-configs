#!groovy

pipeline {

  agent any

  environment {
    ANSIBLE_HOST = credentials('node1_ip_address')

    WORKING_DIR = "/home/ansible/.jenkins/${env.ANSIBLE_HOST}_system_kernel_update-and-remove-old-kernels"
  }

  stages {
    stage('Retrive source code from Github') {
      steps {
        build job: 'ansible/common/retrive-source-code-from-github',
          parameters: [
                        string(
                          name: 'WORKING_DIR',
                          value: "${env.WORKING_DIR}"
                        )
                      ]
      }
    }

    stage('Configure ansible inventory file') {
      steps {
        withCredentials(
                          [
                            string(
                              variable: 'ANSIBLE_HOST',
                              credentialsId: 'node1_ip_address'
                            ),
                            string(
                              variable: 'ANSIBLE_PORT',
                              credentialsId: 'ansible_port'
                            ),
                            string(
                              variable: 'ANSIBLE_HOST_PASSWORD',
                              credentialsId: 'node1_password'
                            )
                          ]
                       )
          {
            build job: 'ansible/common/configure-ansible-inventory-file/ssh-connection-enabled',
              parameters: [
                            string(
                              name: 'WORKING_DIR',
                              value: "${env.WORKING_DIR}"
                            ),
                            credentials(
                              name: 'ANSIBLE_HOST',
                              value: "${env.ANSIBLE_HOST}"
                            ),
                            credentials(
                              name: 'ANSIBLE_PORT',
                              value: "${env.ANSIBLE_PORT}"
                            ),
                            password(
                               name: 'ANSIBLE_HOST_PASSWORD',
                               value: "${env.ANSIBLE_HOST_PASSWORD}"
                            )
                          ]
          }
        }
    }

    stage('excute ansible-playbook command') {
      steps {
        sh "sudo -u ansible ansible-playbook ${env.WORKING_DIR}/system_kernel_update-and-remove-old-kernels.yml \
            -i ${env.WORKING_DIR}/inventories/host \
            | sudo -u ansible tee ${env.WORKING_DIR}/.ansible.log"
      }
    }

    stage('Analyze Ansible log and output result') {
      steps {
        build job: 'ansible/common/analyze-ansible-log-and-output-result',
          parameters: [
                        string(
                          name: 'WORKING_DIR',
                          value: "${env.WORKING_DIR}"
                        )
                      ]
      }
    }
  }
}
