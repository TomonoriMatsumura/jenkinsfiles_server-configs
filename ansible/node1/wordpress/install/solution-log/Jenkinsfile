#!groovy

pipeline {

  agent any

  environment {

    ANSIBLE_HOST = "${env.NODE1_IP_ADDER}"

    ANSIBLE_HOST_PASSWORD =  "${env.NODE1_PASSWORD}"

    WORKING_DIR = "/home/ansible/.jenkins/${env.NODE1_IP_ADDER}_wordpress_install_solution-log"

    VAR_YAML = "${env.WORKING_DIR}/vars/wordpress/install/default.yml" 
  }

  stages {
    stage('Retrive source code from Github') {
      steps {
        build job: 'ansible/common/retrive-source-code-from-github', 
          parameters: [
                        string(
                          name: 'WORKING_DIR',
                          value: "${env.WORKING_DIR}"
                        )
                      ]
      }
    }

    stage('Configure ansible inventory file') {
      steps {
        build job: 'ansible/common/configure-ansible-inventory-file/ssh-connection-enabled',
          parameters: [
                        string(
                          name: 'WORKING_DIR', 
                          value: "${env.WORKING_DIR}"
                        ),
                        string(
                          name: 'ANSIBLE_HOST', 
                          value: "${env.ANSIBLE_HOST}"
                        ),
                        password(
                          name: 'ANSIBLE_HOST_PASSWORD',
                          value: "${env.ANSIBLE_HOST_PASSWORD}"
                        )
                      ]
      }
    }

    stage('Configure ansible vars file') {
      steps {
        sh "sudo -u ansible sed -i -e 's/example.com: Require host example.com/${env.REQUIRE_HOST1}: Require host ${env.REQUIRE_HOST1}/g' ${env.VAR_YAML}"
        sh "sudo -u ansible sed -i -e 's/127.0.0.1: Require ip 127.0.0.1/${env.REQUIRE_HOST2}: Require host ${env.REQUIRE_HOST2}/g' ${env.VAR_YAML}"
      }
    }

    stage('excute ansible-playbook command') {
      steps {
        sh "sudo -u ansible ansible-playbook ${env.WORKING_DIR}/wordpress_install.yml \
            -i ${env.WORKING_DIR}/inventories/host \
            --skip-tags 'httpd_install,language_php_71_install,rdb_mariadb_install' \
            -e 'db_user=wp_solution_log' \
            -e 'db_name=wp_solution_log' \
            -e 'db_password=${env.WP_DB_PASSWORD}' \
            -e 'httpd_conf_confd=wp_solution_log.conf' \
            -e 'wp_install_dir=wordpress/solution-log' \
            -e 'mariadb_root_password=${env.MARIADB_ROOT_PASSWORD}' \
            | sudo -u ansible tee ${env.WORKING_DIR}/.ansible.log"
      }
    }

    stage('Analyze Ansible log and output result') {
      steps {
        build job: 'ansible/common/analyze-ansible-log-and-output-result', 
          parameters: [
                        string(
                          name: 'WORKING_DIR',
                          value: "${env.WORKING_DIR}"
                        )
                      ]
      }
    }
  } 
}
